@{
    ViewData["Title"] = "Tabela e Calculadora de Insulina";
}

<div class="tabela-container">
<table id="myTable">
    <thead>
        <tr>
            <th>Nome do Alimento</th>
            <th>HC</th>
            <!-- Outras colunas conforme necessário -->
        </tr>
    </thead>
    <tbody>
        <!-- Os dados da planilha serão inseridos aqui pelo script abaixo -->
    </tbody>
</table>
</div>

<input type="text" id="searchBar" onkeyup="searchData()" placeholder="Procurar...">



@using (Html.BeginForm("CalculateDose", "Insulin", FormMethod.Post))
{
    <label for="currentValue">Valor Atual:</label>
    <input type="number" id="currentValue" name="currentValue" required />

    <label for="idealValue">Valor Ideal:</label>
    <input type="number" id="idealValue" name="idealValue" required />

    <label for="fsi">FSI (Fator de Sensibilidade à Insulina):</label>
    <input type="number" id="fsi" name="fsi" required />

    <label for="carbs">Hidratos de Carbono:</label>
    <input type="number" id="carbs" name="carbs" required />

    <label for="ratio">Relação Insulina para HC:</label>
    <input type="number" id="ratio" name="ratio" required />

    <input type="submit" value="Calcular" />
}

@if (ViewBag.Dose != null)
{
    <div class="resultado-dose">
        Resultado da Dose de Insulina: @ViewBag.Dose
    </div>
}


<style>

    .tabela-container {
        border: 1px solid #7F7FD5; /* ou a cor que preferir */
        border-radius: 8px; /* Cantos arredondados para o retângulo */
        max-height: 500px; /* ou a altura que preferir */
        overflow: auto; /* cria barras de rolagem se necessário */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombra para um efeito "elevado" */
        background-color: #fff; /* Fundo branco para a tabela */
        margin: 20px 0; /* Adicionar margem acima e abaixo da tabela */
    }

    #myTable {
        width: 100%; /* A tabela preenche toda a largura do container */
        border-collapse: collapse; /* Para estilos de borda mais limpos */
    }

        #myTable th, #myTable td {
            text-align: left; /* Alinhamento do texto nas células */
            padding: 8px; /* Espaçamento dentro das células */
            border-bottom: 1px solid #ddd; /* Linha de divisão entre linhas */
        }

        #myTable th {
            background-color: #f2f2f2; /* Cor de fundo para o cabeçalho da tabela */
            color: #333; /* Cor do texto para o cabeçalho da tabela */
        }

        #myTable tr:hover {
            background-color: #f5f5f5; /* Cor de fundo quando o mouse passa por cima de uma linha */
        }











    body {
        font-family: 'Open Sans', sans-serif;
        background: linear-gradient(to right, #7F7FD5, #86A8E7, #91EAE4);
        color: #333;
        margin: 0;
        padding: 0; /* Removido o padding para evitar problemas de responsividade */
    }

    .iframe-container iframe {
        width: 100%;
        height: auto; /* Ajuste para responsividade */
        min-height: 400px; /* Ajuste conforme necessário */
        border-radius: 8px;
        border: none;
        height: auto;
        min-height: 50vh;
    }

    .iframe-container {
        margin-top: 4em; /* ou 2rem, que são relativas ao tamanho da fonte */
        /* Resto do seu CSS */
    }

    form {
        background: #f9f9f9;
        padding: 15px; /* Padding ajustado para telas menores */
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
        width: 100%; /* Garantir que o formulário não ultrapasse a largura da tela */
        box-sizing: border-box; /* Incluir padding no cálculo da largura */
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-top: 10px;
    }

    input[type=number], input[type=submit] {
        width: 100%; /* Ajuste para preencher a largura do formulário */
        padding: 10px;
        margin-top: 5px;
        border-radius: 5px;
        border: 1px solid #ddd;
        box-sizing: border-box; /* Incluir padding no cálculo da largura */
        transition: border-color 0.3s;
    }

    input[type=submit] {
        background-color: #7F7FD5;
        color: white;
        font-size: 16px;
        border: none;
        cursor: pointer;
        margin-top: 20px;
    }

        input[type=submit]:hover, input[type=submit]:focus {
            background-color: #6c63ff;
        }

    input[type=number]:focus {
        border-color: #7F7FD5;
    }

    .resultado-dose {
        margin-top: 20px;
        padding: 15px;
        background-color: #86A8E7;
        color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .resultado-dose {
        /* Restante do seu CSS */
        margin-top: 20px;
        padding: 15px;
        background-color: #86A8E7;
        color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px; /* Adiciona um espaço abaixo do resultado */
        margin-bottom: 2em; /* Adiciona margem abaixo do resultado */
    }

    body {
        /* ... */
        padding-bottom: 4em; /* Adiciona padding no final da página para evitar que o conteúdo fique debaixo do rodapé */
    }

    /* Media Queries para ajustar o layout em dispositivos menores */
    @@media (max-width: 768px) {
        body {
            padding: 10px; /* Adiciona padding em dispositivos menores */
        }

        .iframe-container iframe {
            min-height: 300px; /* Reduz a altura mínima em dispositivos menores */
        }

        .iframe-container {
            margin-top: 4em; /* ou 2rem, que são relativas ao tamanho da fonte */
            /* Resto do seu CSS */
        }

        .iframe-container iframe {
                min-height: 30vh; /* Reduz a altura mínima do iframe em dispositivos menores */
        }

        form {
            margin-top: 10px; /* Diminui a margem superior para economizar espaço */
        }

        .resultado-dose {
            margin-bottom: 2em; /* Aumenta a margem em telas menores se necessário */
        }

        body, html {
            padding-bottom: 4em; /* Assegura que há espaço extra no final da página */
        }
        /* Ajustes adicionais podem ser necessários aqui, dependendo do conteúdo */
    }
</style>
  


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var apiKey = 'AIzaSyB1w4GY7v-LvqSZZsgseWbNzTORaA8jINw';
        var spreadsheetId = '1PjQqLJpAvh8AU1b0YorMrlkdFaHLwzbgJOXaWgz-l1A';
        var range = 'HC';
        var url = `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${range}?key=${apiKey}`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                const rows = data.values;
                const table = document.getElementById("myTable").getElementsByTagName('tbody')[0];

                rows.forEach((row, index) => {
                    let newRow = table.insertRow();
                    row.forEach((cell, cellIndex) => {
                        let newCell = newRow.insertCell(cellIndex);
                        let newText = document.createTextNode(cell);
                        newCell.appendChild(newText);
                    });
                });
            })
            .catch(error => console.error('Error:', error));
    });






    function searchData() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchBar");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop através de todas as linhas da tabela, e esconde aquelas que não correspondem à pesquisa
        for (i = 1; i < tr.length; i++) { // Comece de 1 para pular o cabeçalho da tabela
            // Ajuste para 1 para pesquisar na segunda coluna
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }


</script>

